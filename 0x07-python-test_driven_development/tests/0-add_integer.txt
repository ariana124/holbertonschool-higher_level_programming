Module 0-add_integer.py
=======================
Using ``add_integer``
-----------------------

Import:
	>>> add_integer = __import__("0-add_integer").add_integer

Normal Usage:
        >>> add_integer(2, 3)
        5

Adding an integer and a string:
        >>> add_integer("super", 4)
        Traceback (most recent call last):
        ...
        TypeError: a must be an integer

        >>> add_integer(2, "fun")
        Traceback (most recent call last):
        ...
        TypeError: b must be an integer

Adding an integer and a float:
        >>> add_integer(2.1, 8)
        10

Adding two negative integers:
        >>> add_integer(-5, -6.3)
        -11

Adding infinity:
        >>> add_integer(float('inf'))
	Traceback (most recent call last):
	...
	OverflowError: cannot convert float infinity to integer

Adding a float NaN:
        >>> add_integer(9, float('nan'))
	Traceback (most recent call last):
	...
	ValueError: cannot convert float NaN to integer

Adding with missing parameters:
        >>> add_integer(None, 3)
	Traceback (most recent call last):
	...
	TypeError: a must be an integer

	>>> add_integer(8, None)
	Traceback (most recent call last):
	...
	TypeError: b must be an integer

	>>> add_integer(None, None)
	Traceback (most recent call last):
	...
	TypeError: a must be an integer

	>>> add_integer()
	Traceback (most recent call last):
	...
	TypeError: add_integer() missing 1 required positional argument: 'a'

	>>> add_integer( , )
	Traceback (most recent call last):
	...
	SyntaxError: invalid syntax
